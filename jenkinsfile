pipeline {
    agent any

	parameters {
	    choice(name: 'Update_Job_Config', choices:"Yes\nNo", description: "Do you want to do a dry run to update job to latest version and grab parameters?" )
//		string(name: 'VRA_HOST', defaultValue: 'vra-qualifr.itn.intraorange', description: 'VRA URL where you want to deploy OM')
		string(name: 'VRA_USER', description: 'Username for login to VRA')
		password(name: 'VRA_PASSWD', description: 'Password for login to VRA')
        string(name: 'Country', description: 'Country for which you want to deploy OM')
        string(name: 'Blueprint', description: 'Blueprint that you want to deploy')
		string(name: 'OM_RPM', defaultValue: 'orange_money_core-4.4.4.2.3-0.x86_64.rpm', description: 'Orange Money RPM that you want to install')
		string(name: 'DB_VIP_IP', description: 'IP address of DB VIP')
		string(name: 'DB_VIP_Port', description: 'Port number for DB VIP')
		string(name: 'DB_SID', description: 'Database SID')
    }
    stages {
	    stage("Updating Job Config") {
            steps {
                script {
                    if ("${params.Update_Job_Config}" == "Yes") {
                        currentBuild.result = 'ABORTED'
                        error('DRY RUN COMPLETED. JOB UPDATED TO LATEST VERSION AND PARAMETERIZED.')
                    }
                }
            }
		}
        stage('Create_VMs') {
            steps {
				parallel (
					"RUEIL": {
						echo 'Job: Create VMs'
						echo 'Calling ansible playbook for creating virtual machines'
						sh "/usr/bin/ansible-playbook /tmp/OLR/deploy_vms.yml -e \"VRA_HOST=vra-qualifr.itn.intraorange SITE=RUEIL VRA_USER=${params.VRA_USER} VRA_PASSWD=${params.VRA_PASSWD} COUNTRY=${params.Country} BP_NAME=${params.Blueprint}\""
					},
					"NORMANDIE": {
						echo 'Job: Create VMs'
						echo 'Calling ansible playbook for creating virtual machines'
						sh "/usr/bin/ansible-playbook /tmp/OLR/deploy_vms.yml -e \"VRA_HOST=vra-qualifn.itn.intraorange SITE=NORMANDIE VRA_USER=${params.VRA_USER} VRA_PASSWD=${params.VRA_PASSWD} COUNTRY=${params.Country} BP_NAME=${params.Blueprint}\""
					}
				)
            }
        }
        stage('Configure_Routing') {
            steps {
				parallel (
					"RUEIL": {
						echo 'Job: Configure Routing'
						echo 'Calling ansible playbook for configure routing on virtual machines'
						sh "ANSIBLE_HOST_KEY_CHECKING=false /usr/bin/ansible-playbook /tmp/OLR/configure_routing.yml -e \"SITE=RUEIL COUNTRY=${params.Country} BP_NAME=${params.Blueprint}\""
					},
					"NORMANDIE": {
						echo 'Job: Configure Routing'
						echo 'Calling ansible playbook for configure routing on virtual machines'
						sh "ANSIBLE_HOST_KEY_CHECKING=false /usr/bin/ansible-playbook /tmp/OLR/configure_routing.yml -e \"SITE=NORMANDIE COUNTRY=${params.Country} BP_NAME=${params.Blueprint}\""
					}
				)
            }
        }
        stage('Install_OM_RPM') {
            steps {
				parallel (
					"RUEIL": {
						echo 'Job: Install_OM_RPM'
						echo 'Calling ansible playbook for orange money rpm on virtual machines'
						sh "/usr/bin/ansible-playbook /tmp/OLR/install_OM_RPM.yml -e \"SITE=RUEIL COUNTRY=${params.Country} BP_NAME=${params.Blueprint} RPM_NAME=${params.OM_RPM}\""
					},
					"NORMANDIE": {
						echo 'Job: Install_OM_RPM'
						echo 'Calling ansible playbook for orange money rpm on virtual machines'
						sh "/usr/bin/ansible-playbook /tmp/OLR/install_OM_RPM.yml -e \"SITE=NORMANDIE COUNTRY=${params.Country} BP_NAME=${params.Blueprint} RPM_NAME=${params.OM_RPM}\""
					}
				)
            }
        }
		stage('Configure_OM') {
            steps {
				parallel (
					"RUEIL": {
						echo 'Job: Configure_OM'
						echo 'Calling ansible playbook for orange money configuration on virtual machines'
						sh "/usr/bin/ansible-playbook /tmp/OLR/configure_OM.yml -e \"SITE=RUEIL COUNTRY=${params.Country} BP_NAME=${params.Blueprint} RPM_NAME=${params.OM_RPM} DB_VIP=${params.DB_VIP_IP} DB_PORT=${params.DB_VIP_Port} DB_SID=${params.DB_SID}\""
					},
					"NORMANDIE": {
						echo 'Job: Configure_OM'
						echo 'Calling ansible playbook for orange money configuration on virtual machines'
						sh "/usr/bin/ansible-playbook /tmp/OLR/configure_OM.yml -e \"SITE=NORMANDIE COUNTRY=${params.Country} BP_NAME=${params.Blueprint} RPM_NAME=${params.OM_RPM} DB_VIP=${params.DB_VIP_IP} DB_PORT=${params.DB_VIP_Port} DB_SID=${params.DB_SID}\""
					}
				)
            }
        }
		stage('Configure_F5VIP') {
            steps {
                echo 'Job: Configure_F5VIP'
            }
        }
		stage('Configure_Backup') {
            steps {
                echo 'Job: Configure_Backup'
            }
        }
    }
}
